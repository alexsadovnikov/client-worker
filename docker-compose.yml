services:
  # Сервис аутентификации (auth)
  auth:
    build:
      context: ./client-service/auth
    container_name: auth
    ports:
      - "5051:5001"
    environment:
      - PYTHONPATH=/app

  # Сервис чата (chat)
  chat:
    build:
      context: ./client-service/chat
    container_name: chat
    ports:
      - "5052:5002"
    environment:
      - PYTHONPATH=/app

  # Сервис обработки (worker)
  worker:
    build:
      context: ./client-service/worker
    container_name: worker
    ports:
      - "5050:8000"
    volumes:
      - ./client-service/worker:/app
      - ./shared/schemas:/app/shared/schemas  # если shared нужен в рантайме
    depends_on:
      - kafka
      - crm
    environment:
      - PYTHONPATH=/app:/app/shared

  # Kafka брокер
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_CLUSTER_ID=V4XjsoY1QkOz9mmoDLjSRA
      - ALLOW_PLAINTEXT_LISTENER=yes

  # Моковая CRM
  crm:
    build:
      context: ./client-service/crm
    container_name: crm
    ports:
      - "5053:5000"
    environment:
      - PYTHONPATH=/app

  # API Gateway
  api_gateway:
    build:
      context: ./client-service/api_gateway
    container_name: api_gateway
    ports:
      - "8080:8080"
    environment:
      - PYTHONPATH=/app