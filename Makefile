.PHONY: up down restart dev logs status test coverage lint clean test-myservice dashboard shell rebuild logs-service restart-service free-port clean-docker

# üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
up:
	docker compose up -d --build

# üíõ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
down:
	docker compose down

# üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
restart:
	docker compose down
	docker compose up -d --build

# üß≤ –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å override
dev:
	lsof -ti:5050 -ti:5000 -ti:5051 -ti:8501 | xargs kill -9 || true
	docker compose -f docker-compose.yml -f docker-compose.override.yml up -d --build

# üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
logs:
	docker compose logs -f

# üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
status:
	docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# ü•™ Unit-—Ç–µ—Å—Ç—ã –¥–ª—è worker
test:
	PYTHONPATH=clientservice/worker pytest --cov=app --cov-report=term clientservice/worker/tests

# üìà –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ worker –≤ —Ñ–∞–π–ª
coverage:
	PYTHONPATH=clientservice/worker pytest --cov=app --cov-report=xml clientservice/worker/tests

# ü•™ –¢–µ—Å—Ç—ã –¥–ª—è my_service
test-myservice:
	PYTHONPATH=clientservice/my_service pytest --cov=app --cov-report=term clientservice/my_service/tests

# üîç –õ–∏–Ω—Ç–∏–Ω–≥ worker-—Å–µ—Ä–≤–∏—Å–∞
lint:
	.venv/bin/flake8 clientservice/worker

# ü•µ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ –∫—ç—à-—Ñ–∞–π–ª–æ–≤
clean:
	find . -name "__pycache__" -type d -exec rm -rf {} +
	find . -name ".DS_Store" -delete
	find . -name "*.pyc" -delete
	find . -name "*.pyo" -delete
	find . -name "*.coverage" -delete

# üìä –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥—ç—à–±–æ—Ä–¥–∞
dashboard:
	streamlit run clientservice/dashboard/streamlit_app.py --server.port 8501 --server.address 0.0.0.0

# üë§ –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: make shell SERVICE=worker
shell:
	docker exec -it $(SERVICE) /bin/sh

# üîÑ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: make rebuild SERVICE=worker
rebuild:
	docker compose build --no-cache $(SERVICE)
	docker compose up -d $(SERVICE)

# üìã –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: make logs-service SERVICE=crm
logs-service:
	docker compose logs -f $(SERVICE)

# üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞: make restart-service SERVICE=auth
restart-service:
	docker compose restart $(SERVICE)

# üîå –û—á–∏—Å—Ç–∫–∞ –∑–∞–Ω—è—Ç–æ–≥–æ –ø–æ—Ä—Ç–∞ (5050)
free-port:
	lsof -ti:5050 | xargs kill -9 || true

# üì§ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
clean-docker:
	docker container prune -f

# üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker Daemon
check-docker:
	@if ! docker info >/dev/null 2>&1; then \
		echo "‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å Docker Desktop –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –µ–≥–æ."; \
		exit 1; \
	else \
		echo "‚úÖ Docker daemon –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç."; \
	fi