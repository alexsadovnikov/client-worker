name: üîÅ Worker Smoke Test

on:
  push:
    paths:
      - 'clientservice/worker/**'
  pull_request:
    paths:
      - 'clientservice/worker/**'

jobs:
  test-worker:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: client_user
          POSTGRES_PASSWORD: client_pass
          POSTGRES_DB: client_service
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v3

      - name: üß∞ Install tools
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: üê≥ Build and start services
        run: |
          docker compose -f docker-compose.yml build worker
          docker compose -f docker-compose.yml up -d kafka crm worker

      - name: ‚è≥ Wait for worker to become available
        run: |
          echo "‚è≥ Waiting for worker API to be ready..."
          for i in {1..20}; do
            curl -s http://localhost:5050/ || true
            if curl -s http://localhost:5050 | grep -q "ClientService"; then
              echo "‚úÖ Worker is up!"
              break
            fi
            sleep 5
          done

      - name: ‚úÖ Run test_worker.sh
        run: |
          chmod +x clientservice/worker/test_worker.sh
          clientservice/worker/test_worker.sh

      - name: üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
        run: |
          PYTHONPATH=$PWD/clientservice:$PWD/clientservice/worker pytest clientservice/worker/tests --cov=clientservice/worker --cov-report=xml

      - name: üßπ Shutdown
        if: always()
        run: docker compose -f docker-compose.yml down