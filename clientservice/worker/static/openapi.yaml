components:
  schemas:
    Call:
      properties:
        agent_id:
          type: string
        contact_id:
          type: string
        id:
          type: string
      type: object
    Case:
      properties:
        id:
          type: string
        status:
          type: string
        title:
          type: string
      type: object
    Client:
      properties:
        email:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      description: 'Введите токен как: Bearer <токен>'
      scheme: bearer
      type: http
info:
  description: Client worker API с поддержкой JWT-аутентификации, CRUD-операций и
    интеграции с CRM/Kafka
  title: Client Worker API
  version: 1.0.0
openapi: 3.0.3
paths:
  /clients:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Client'
                type: array
          description: Успешно
      security:
      - BearerAuth: []
      summary: Получить список клиентов
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        '200':
          description: Создан
      security:
      - BearerAuth: []
      summary: Создать клиента
  /clients/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Удалён
      security:
      - BearerAuth: []
      summary: Удалить клиента
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Успешно
      security:
      - BearerAuth: []
      summary: Получить клиента по ID
    put:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        '200':
          description: Обновлён
      security:
      - BearerAuth: []
      summary: Обновить клиента
  /login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
                username:
                  type: string
              required:
              - username
              - password
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                type: object
          description: Токен выдан
        '401':
          description: Неверные данные
      summary: Логин
  /protected:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  logged_in_as:
                    type: string
                type: object
          description: ОК
        '401':
          description: Неавторизован
      security:
      - BearerAuth: []
      summary: Защищённый маршрут
security:
- BearerAuth: []
servers:
- url: http://localhost:5050
