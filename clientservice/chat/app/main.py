from flask import Flask, request, jsonify
from flask_socketio import SocketIO, send
from pathlib import Path
import json

app = Flask(__name__)
app.config['SECRET_KEY'] = 'secret!'
socketio = SocketIO(app, cors_allowed_origins="*")

# üì¶ –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ storage.json
STORAGE_PATH = Path(__file__).resolve().parent.parent / "storage.json"

def load_projects():
    if STORAGE_PATH.exists():
        with open(STORAGE_PATH, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def save_projects(projects):
    with open(STORAGE_PATH, "w", encoding="utf-8") as f:
        json.dump(projects, f, ensure_ascii=False, indent=2)

# ‚úÖ REST-—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
@app.route("/projects", methods=["GET"])
def get_projects():
    return jsonify(load_projects())

@app.route("/projects", methods=["POST"])
def create_project():
    data = request.json
    projects = load_projects()
    new_id = max([p["id"] for p in projects], default=0) + 1
    new_project = {
        "id": new_id,
        "title": data.get("title"),
        "manager": data.get("manager"),
        "client": data.get("client"),
        "status": data.get("status", "–ù–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–µ")
    }
    projects.append(new_project)
    save_projects(projects)
    socketio.emit("new_project", new_project)  # üîÑ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ —Å–æ–∫–µ—Ç—É
    return jsonify(new_project), 201

# ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞
@app.route('/ping', methods=['GET'])
def ping():
    return {"status": "pong"}

# üîå WebSocket-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@socketio.on('message')
def handle_message(message):
    print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}")
    send(f"–≠—Ö–æ: {message}", broadcast=True)

@socketio.on('connect')
def handle_connect():
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è")

@socketio.on('disconnect')
def handle_disconnect():
    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ chat WebSocket-—Å–µ—Ä–≤–µ—Ä–∞...")
    socketio.run(app, host="0.0.0.0", port=5002)