openapi: 3.0.3
info:
  title: Client Service API
  description: API для управления проектами, задачами, пользователями, расходами,
    табелями, аналитикой и финансами.
  version: 1.0.0
  contact:
    name: Client Service Team
    email: support@clientservice.local
servers:
- url: /
  description: Current server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Проект А
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 101
        title:
          type: string
          example: Сделать отчет
    User:
      type: object
      properties:
        id:
          type: integer
          example: 501
        username:
          type: string
          example: alex
    Expense:
      type: object
      properties:
        id:
          type: integer
          example: 1001
        amount:
          type: number
          format: float
          example: 1500.5
        description:
          type: string
          example: Оплата за услуги
    Timesheet:
      type: object
      properties:
        id:
          type: integer
          example: 2001
        user_id:
          type: integer
          example: 501
        hours:
          type: number
          format: float
          example: 8.5
    Analytics:
      type: object
      properties:
        id:
          type: integer
          example: 3001
        metric:
          type: string
          example: Conversion Rate
    Financial:
      type: object
      properties:
        id:
          type: integer
          example: 4001
        report:
          type: string
          example: Q1 Financial Report
security:
- BearerAuth: []
paths:
  /projects:
    get:
      tags:
      - Projects
      summary: Получить список проектов
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    post:
      tags:
      - Projects
      summary: Создать новый проект
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /projects/{id}:
    get:
      tags:
      - Projects
      summary: Получить проект по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    put:
      tags:
      - Projects
      summary: Обновить проект по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      tags:
      - Projects
      summary: Удалить проект по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /tasks:
    get:
      tags:
      - Tasks
      summary: Получить список задач
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    post:
      tags:
      - Tasks
      summary: Создать новую задачу
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    get:
      tags:
      - Tasks
      summary: Получить задачу по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      tags:
      - Tasks
      summary: Обновить задачу по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      tags:
      - Tasks
      summary: Удалить задачу по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /users:
    get:
      tags:
      - Users
      summary: Получить список пользователей
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
      - Users
      summary: Создать пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      tags:
      - Users
      summary: Получить пользователя по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - Users
      summary: Обновить пользователя по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - Users
      summary: Удалить пользователя по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /expenses:
    get:
      tags:
      - Expenses
      summary: Получить список расходов
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
    post:
      tags:
      - Expenses
      summary: Создать расход
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
  /expenses/{id}:
    get:
      tags:
      - Expenses
      summary: Получить расход по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
    put:
      tags:
      - Expenses
      summary: Обновить расход по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
    delete:
      tags:
      - Expenses
      summary: Удалить расход по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
  /timesheets:
    get:
      tags:
      - Timesheets
      summary: Получить список табелей
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
    post:
      tags:
      - Timesheets
      summary: Создать табель
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timesheet'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
  /timesheets/{id}:
    get:
      tags:
      - Timesheets
      summary: Получить табель по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
    put:
      tags:
      - Timesheets
      summary: Обновить табель по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timesheet'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
    delete:
      tags:
      - Timesheets
      summary: Удалить табель по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
  /analytics:
    get:
      tags:
      - Analytics
      summary: Получить список аналитики
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
    post:
      tags:
      - Analytics
      summary: Создать запись аналитики
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analytics'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
  /analytics/{id}:
    get:
      tags:
      - Analytics
      summary: Получить запись аналитики по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
    put:
      tags:
      - Analytics
      summary: Обновить запись аналитики по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analytics'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
    delete:
      tags:
      - Analytics
      summary: Удалить запись аналитики по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
  /financials:
    get:
      tags:
      - Financials
      summary: Получить список финансов
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Financial'
    post:
      tags:
      - Financials
      summary: Создать финансовую запись
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Financial'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Financial'
  /financials/{id}:
    get:
      tags:
      - Financials
      summary: Получить финансовую запись по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Financial'
    put:
      tags:
      - Financials
      summary: Обновить финансовую запись по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Financial'
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Financial'
    delete:
      tags:
      - Financials
      summary: Удалить финансовую запись по ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Financial'